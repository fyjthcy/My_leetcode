/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
    void dfs(TreeNode* root,int &min,int step)
    {
        if(root==NULL) return ;
        if(root->left==NULL&&root->right==NULL)//只有同时左右子树都不存在深度才算是完成，有左无右，有右无左都要再算一步子树的深度
        {
            if(min>step) min=step;
                return ;
        }
        dfs(root->left,min,step+1);
        dfs(root->right,min,step+1);
    }
public:
    //用深度优先搜索来做
    int minDepth(TreeNode* root) {
        if(root==NULL) return 0;
        int min=INT_MAX;
        int step=0;
        dfs(root,min,1);
        return min;
    }
};
