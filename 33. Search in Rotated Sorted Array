class Solution {
public:
    int search(vector<int>& nums, int target) {
        int l=0;
        int r=nums.size()-1;
        if(nums[l]==target) return l;
        if(nums[r]==target) return r;
        while(l<r)
        {
            int mid=l+(r-l)/2;
            if(nums[mid]==target) return mid;
            if(nums[mid]>=nums[l] && nums[mid]>=target && nums[l]>=target) l=mid;
            if(nums[mid]>=nums[l] && nums[mid]>=target && nums[l]<target) r=mid;
            if(nums[mid]>=nums[l] && nums[mid]<target) l=mid;
            
            if(nums[mid]<nums[l] && nums[mid]<target && nums[r]>=target) l=mid;
            if(nums[mid]<nums[l] && nums[mid]<target && nums[r]<target) r=mid;
            if(nums[mid]<nums[r] && nums[mid]>=target) r=mid;
            if(nums[l]==target) return l;
            if(r-l==1) return -1;
            
        }
        return -1;
    }
};
